openapi: 3.0.0
info:
  title: RAPI
  version: "1.0.0"
paths:
  /orders:
    post:
      summary: "Create a new order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: 2
                menu_items:
                  type: array
                  items:
                    type: object
                    properties:
                      menu_item_id:
                        type: string
                        format: uuid
                        example: "433e36e8-f049-475a-8fa9-0b5453770f1a"
                      name:
                        type: string
                        example: "Burger"
                      price:
                        type: string
                        example: "855"
      responses:
        '200':
          description: "Order created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      remaining_cooking_time_upper_bound_in_min:
                        type: integer
                        example: 119
                      total_price:
                        type: string
                        example: "855"
                      status:
                        type: string
                        example: "Received"
                      meal_items:
                        type: array
                        items:
                          type: object
                          properties:
                            meal_item_id:
                              type: string
                              format: uuid
                              example: "5063168b-246b-4abb-9811-39b0c939cf51"
                            name:
                              type: string
                              example: "Burger"
                            price:
                              type: string
                              example: "855"
                            status:
                              type: string
                              example: "Received"
                            cooking_time_in_min:
                              type: integer
                              example: 15
                            is_remove:
                              type: boolean
                              example: false
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"                       

  /orders/{table-id}:
    get:
      summary: "Get order by table ID"
      parameters:
        - name: table-id
          in: path
          required: true
          schema:
            type: integer
          example: 2
        - name: include_removed_items
          in: query
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: "Order retrieved"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      remaining_cooking_time_upper_bound_in_min:
                        type: integer
                        example: 119
                      total_price:
                        type: string
                        example: "350"
                      status:
                        type: string
                        example: "Received"
                      meal_items:
                        type: array
                        items:
                          type: object
                          properties:
                            meal_item_id:
                              type: string
                              format: uuid
                              example: "5063168b-246b-4abb-9811-39b0c939cf51"
                            name:
                              type: string
                              example: "Drink"
                            price:
                              type: string
                              example: "350"
                            status:
                              type: string
                              example: "Received"
                            cooking_time_in_min:
                              type: integer
                              example: 15
                            is_remove:
                              type: boolean
                              example: false
        '404':
          description: "Order not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "There are no orders associated with this table"                       

    delete:
      summary: "Delete order by table ID"
      parameters:
        - name: table-id
          in: path
          required: true
          schema:
            type: integer
          example: 2
      responses:
        '200':
          description: "Order deleted"
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_id:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: "Success"
        '409':
          description: "Order conflicted"
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_id:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: "Order cannot be removed as it is already started preparing, or completed"  
        '404':
          description: "Order not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "There are no orders associated with this table"              

  /meal-items:
    post:
      summary: "Add meal items to an order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: 2
                menu_items:
                  type: array
                  items:
                    type: object
                    properties:
                      menu_item_id:
                        type: string
                        format: uuid
                        example: "433e36e8-f049-475a-8fa9-0b5453770f1e"
                      name:
                        type: string
                        example: "tea"
                      price:
                        type: string
                        example: "123"
      responses:
        '200':
          description: "Order created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      remaining_cooking_time_upper_bound_in_min:
                        type: integer
                        example: 119
                      total_price:
                        type: string
                        example: "123"
                      status:
                        type: string
                        example: "Received"
                      meal_items:
                        type: array
                        items:
                          type: object
                          properties:
                            meal_item_id:
                              type: string
                              format: uuid
                              example: "5063168b-246b-4abb-9811-39b0c939cf51"
                            name:
                              type: string
                              example: "tea"
                            price:
                              type: string
                              example: "123"
                            status:
                              type: string
                              example: "Received"
                            cooking_time_in_min:
                              type: integer
                              example: 15
                            is_remove:
                              type: boolean
                              example: false
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"   
        '404':
          description: "Order not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "There are no orders associated with this table"               

    delete:
      summary: "Remove meal items from an order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: 2
                meal_item_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                    example: "ee5c8739-10a8-4b56-9c3c-7104dbfd286f"
      responses:
        '200':
          description: "Meal items removed"
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_id:
                    type: integer
                    example: 2
                  non_removable_meal_item_ids:
                    type: array
                    items:
                      type: string
                      format: uuid
                    example: []
                  message:
                    type: string
                    example: "All specified items have been removed successfully."    
        '409':
          description: "Meal items partially or none are removed"
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_id:
                    type: integer
                    example: 2
                  non_removable_meal_item_ids:
                    type: array
                    items:
                      type: string
                      format: uuid
                      example: "ee5c8739-10a8-4b56-9c3c-7104dbfd286f"  
                  message:
                    type: string
                    example: "Some items could not be removed as they are already started preparing, or completed."                  
        '404':
          description: "Meal items not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The specified meal items can't be found for this table"                

  /meal-items/{table-id}/{meal-item-id}:
    get:
      summary: "Get meal item by table ID and meal item ID"
      parameters:
        - name: table-id
          in: path
          required: true
          schema:
            type: integer
          example: 2
        - name: meal-item-id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "ee5c8739-10a8-4b56-9c3c-7104dbfd286f"
      responses:
        '200':
          description: "Meal item retrieved"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meal_item:
                    type: object
                    properties:
                      meal_item_id:
                        type: string
                        format: uuid
                        example: "5063168b-246b-4abb-9811-39b0c939cf51"
                      name:
                        type: string
                        example: "Burger"
                      price:
                        type: string
                        example: "855"
                      status:
                        type: string
                        example: "Received"
                      cooking_time_in_min:
                        type: integer
                        example: 15
                      is_remove:
                        type: boolean
                        example: false
        '404':
          description: "Meal items not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The specified meal items can't be found for this table" 