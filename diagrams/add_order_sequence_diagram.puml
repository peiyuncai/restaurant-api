@startuml

actor Client as client
participant AddOrderHandler as handler
box "Order Repo"
participant OrderRepo as repo
database "OrderDataStore\n(DashMap)" as db
end box
box "Thread Pool" #LightBlue
participant ThreadPool as pool
participant worker as worker
queue channel as chan
end box

client -> handler : add order

handler -> repo: get order from db to check if there is an order \nin Received or Preparing status for the table

alt 200 Ok
handler -> handler : convert to order

handler -> repo: add order to db
repo -> db: add order to db

loop each meal item of order
  handler -> pool: send meal cooking job to channel
  pool -> chan: send
end
handler -> repo: get order by table id

handler -> client: order

loop
worker -> chan: get meal cooking job from channel and \ncook(sleep) based on cooking time
end

else 409 Conflict
handler -> client: there is an ongoing order for the table
end

@enduml
